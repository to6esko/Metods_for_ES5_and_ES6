//Strings
//ES5
.charAt()-връща символ
.charCodeAt() - въръща Unicode номер за ES5
.sort() - сортира даден string, масив и го връща
.indexOf() -връща първия индекс в който е намерен даден елемент елемент, или -1 ако не е намерен
.map() - връща нов масив с резултатите от условието на функцията за всеки елемент от масива
.trim() - премахва празното пространство между strings
.test() - търси съвпадения в string, връща true или false
.match()- извлича съвпадения в string с изполване на регулярен израз
.toString() - връща string, предсатвляващ определен обект
.toFixed(2)-форматира номер след десетичната запетая
instanceof- проверява дали прототипа на обкета е обвързан с прототипа на конструктора


//ES6
.codePointAt() - връща Unicode номер за ES6, съответства на charCodeAt()
String.fromCodePoint() - връща символ по даден Unicode номер
.normalize() - ("NFC"),("NFD"),("NFKC"),("NFKD")- нормализира Unicode формите
.includes() - връща true, ако даден текст е намерен в рамките на даден string и false ако не е намерен
.statrWith() -връща true, ако даден текст е намерен в началото на даден string и false ако не е намерен
.repeat() - връща оригиналния string повторен определен брой пъти
.exec() - търси за съвпадения в string, връща съвпадащия текст или 0, ако не е намерен
.source - връща оригиналния string
.flags- връща флаговете в регулярния израз
``- template literal- вкючва многоредови strings
`${ }`-template literal- заместване
String.raw - връща необработената string форма на template literal




//Function
//ES5
.bind()-създава нова функция,като свързва this с определена последователност от аргументи //bind(this)
.call()-извиква функция с дадена this стойност и аргументи, представени по отделно
.apply()-извиква функция с дадена this стойност и аргументи, представени като масив
.reduce()-прилага функция върху всяка стойност в масив от ляво на дясно, за да сведе масива до една единствена стойност

//ES6
rest / spread - (...) - позволява представяне на неограничен брой аргументи, като масив //(object, ...keys)

//Object
//ES5
JSON.stringify()-конвертира JS стойности в JSON string
Object.create()-създава нов обект с указания прототип обект и свойства
Object.getPrototypeOf()-извлича прототипа на даден обект
//ES6
Object.is()-определя дали две стойности са една и съща стойност
Object.assign()-копира стойностите на всички собствени свойства от един или повече обекти към целевия обект.
Object.getOwnPropertyNames()-връща масив с всички свойства, които намери в даден обект.
Object.keys()-връща масив със собствени свойства от даден обект в същия ред, по който се обработват от for-in цикъл
Object.setPrototypeOf()-променя прототипа на даден обект
super- изполва се за извикване на функции от обекта родител
super.prop and super[expr]-са валидни за всеки метод дфиниция в класове и обект литерали

